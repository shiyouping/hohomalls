extend type Mutation {
    createOrder(order: CreateOrderDto): OrderDto
    updateOrder(order: UpdateOrderDto): OrderDto
    deleteOrder(number: String!): Void
}

extend type Query {
    findOrderByNumber(number: String!): OrderDto
    findAllOrders(description: String, placementStart: DateTime, placementEnd: DateTime, status: OrderStatus, first:Int!, after:String): OrderDtoConnection
}

input CreateOrderDto {
    description: String!
    itemId: String!
    placeAt: DateTime!
    quantity: Int!
    shipping: ShippingOption!
    shippingAddress: AddressDto!
}

input UpdateOrderDto {
    number: String!
    quantity: Int!
    shipping: ShippingOption!
    shippingAddress: AddressDto!
}

type OrderDto @connection {
    description: String!
    itemId: String!
    number: String!
    placeAt: DateTime!
    updatedAt: DateTime!
    createdAt: DateTime!
    quantity: Int!
    sellerId: String!
    shipping: ShippingOption!
    shippingAddress: AddressOutputDto!
    shopId: String
    status: OrderStatus
}

enum OrderStatus {
    PLACED,
    PAID,
    SHIPPED,
    DELIVERED
}